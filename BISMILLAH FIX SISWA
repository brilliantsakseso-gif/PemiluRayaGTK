<!DOCTYPE html>
<html lang="id" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pemilihan Ketua OSIS - SMAN 1 Pamijahan</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .card-shadow {
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }
        .candidate-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
        }
        .sidebar-transition {
            transition: transform 0.3s ease-in-out;
        }
        @media (max-width: 768px) {
            .sidebar-hidden {
                transform: translateX(-100%);
            }
        }
    </style>
</head>
<body class="h-full gradient-bg font-sans">
    <div class="min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-md w-full space-y-8" id="mainContainer">
            <!-- Header -->
            <div class="text-center">
                <img src="https://freeimage.host/i/KGWzlVI" alt="Logo SMAN 1 Pamijahan" class="mx-auto h-24 w-24 rounded-full border-4 border-white shadow-lg object-cover" onerror="this.src=''; this.alt='Logo gagal dimuat'; this.style.display='none';">
                <h1 class="mt-6 text-3xl font-bold text-white">SMAN 1 Pamijahan</h1>
                <h2 class="mt-2 text-xl font-semibold text-blue-100">Pemilihan Ketua OSIS</h2>
                <p class="mt-2 text-lg text-blue-200 pulse-animation font-bold">SMANJA Super TEAM</p>
            </div>

            <!-- Login Form -->
            <div id="loginSection" class="bg-white rounded-xl card-shadow p-8">
                <!-- Login Type Selector -->
                <div class="flex mb-6 bg-gray-100 rounded-lg p-1">
                    <button id="studentLoginTab" class="flex-1 py-2 px-4 rounded-md text-sm font-medium transition duration-200 bg-white text-blue-600 shadow-sm">
                        üë®‚Äçüéì Login Siswa
                    </button>
                    <button id="adminLoginTab" class="flex-1 py-2 px-4 rounded-md text-sm font-medium transition duration-200 text-gray-500 hover:text-gray-700">
                        üîê Login Admin
                    </button>
                </div>

                <!-- Student Login Form -->
                <div id="studentLoginForm">
                    <div class="text-center mb-6">
                        <h3 class="text-2xl font-bold text-gray-900">Login Pemilih</h3>
                        <p class="mt-2 text-gray-600">Masukkan NIS untuk melanjutkan pemilihan</p>
                    </div>

                    <form id="loginForm" class="space-y-6">
                        <div>
                            <label for="nis" class="block text-sm font-medium text-gray-700 mb-2">
                                Nomor Induk Siswa (NIS)
                            </label>
                            <input 
                                id="nis" 
                                name="nis" 
                                type="text" 
                                required 
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-lg transition duration-200"
                                placeholder="Masukkan NIS Anda"
                            >
                        </div>

                        <div id="errorMessage" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                </svg>
                                NIS tidak ditemukan. Silakan periksa kembali NIS Anda.
                            </div>
                        </div>

                        <div id="loadingMessage" class="hidden bg-blue-50 border border-blue-200 text-blue-700 px-4 py-3 rounded-lg">
                            <div class="flex items-center">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-blue-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Memverifikasi NIS...
                            </div>
                        </div>

                        <button 
                            type="submit" 
                            class="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 px-4 rounded-lg font-semibold text-lg hover:from-blue-700 hover:to-purple-700 focus:ring-4 focus:ring-blue-300 transition duration-200 transform hover:scale-105"
                        >
                            Masuk ke Pemilihan
                        </button>
                    </form>

                    <div class="mt-6 text-center">
                        <p class="text-sm text-gray-500">
                            üîí Pastikan NIS yang dimasukkan benar dan terdaftar
                        </p>
                    </div>
                </div>

                <!-- Admin Login Form -->
                <div id="adminLoginForm" class="hidden">
                    <div class="text-center mb-6">
                        <h3 class="text-2xl font-bold text-gray-900">Login Administrator</h3>
                        <p class="mt-2 text-gray-600">Masukkan kredensial admin untuk mengakses dashboard</p>
                    </div>

                    <form id="adminForm" class="space-y-6">
                        <div>
                            <label for="adminUsername" class="block text-sm font-medium text-gray-700 mb-2">
                                Username
                            </label>
                            <input 
                                id="adminUsername" 
                                name="adminUsername" 
                                type="text" 
                                required 
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 text-lg transition duration-200"
                                placeholder="Masukkan username admin"
                            >
                        </div>

                        <div>
                            <label for="adminPassword" class="block text-sm font-medium text-gray-700 mb-2">
                                Password
                            </label>
                            <input 
                                id="adminPassword" 
                                name="adminPassword" 
                                type="password" 
                                required 
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 text-lg transition duration-200"
                                placeholder="Masukkan password admin"
                            >
                        </div>

                        <div id="adminErrorMessage" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                </svg>
                                Username atau password salah. Silakan coba lagi.
                            </div>
                        </div>

                        <button 
                            type="submit" 
                            class="w-full bg-gradient-to-r from-red-600 to-purple-600 text-white py-3 px-4 rounded-lg font-semibold text-lg hover:from-red-700 hover:to-purple-700 focus:ring-4 focus:ring-red-300 transition duration-200 transform hover:scale-105"
                        >
                            üîê Masuk ke Dashboard
                        </button>
                    </form>

                    <div class="mt-6 text-center">
                        <p class="text-sm text-gray-500">
                            üîí Akses terbatas untuk administrator sekolah
                        </p>
                    </div>
                </div>
            </div>

            <!-- Voting Page (Hidden initially) -->
            <div id="votingSection" class="hidden bg-white rounded-xl card-shadow p-8">
                <div class="text-center mb-8">
                    <h3 class="text-2xl font-bold text-gray-900">Pilih Ketua OSIS Anda</h3>
                    <p id="voterInfo" class="mt-2 text-gray-600"></p>
                    <div class="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                        <p class="text-sm text-yellow-800">‚ö†Ô∏è Pilihan Anda bersifat final dan tidak dapat diubah</p>
                    </div>
                </div>

                <div class="space-y-6">
                    <!-- Candidate 1 -->
                    <div class="border-2 border-gray-200 rounded-lg p-6 cursor-pointer transition duration-300 candidate-card candidate-hover" data-candidate="1">
                        <div class="flex items-start space-x-4">
                            <div class="flex-shrink-0">
                                <img src="https://freeimage.host/i/KhiY9X2" alt="Aulia Putri Anggraeni" class="w-20 h-20 rounded-full object-cover border-4 border-blue-200 shadow-lg" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="w-20 h-20 rounded-full bg-gradient-to-br from-blue-400 to-blue-600 flex items-center justify-center text-white text-2xl font-bold border-4 border-blue-200 shadow-lg" style="display: none;">
                                    AP
                                </div>
                                <div class="text-center mt-2">
                                    <span class="inline-block bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-bold">01</span>
                                </div>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-xl font-semibold text-gray-900">Aulia Putri Anggraeni</h4>
                                <p class="text-blue-600 font-medium">Kelas XI-8</p>
                                <div class="mt-3 flex gap-2">
                                    <button class="visi-misi-btn bg-blue-100 hover:bg-blue-200 text-blue-800 px-3 py-1 rounded-lg text-sm font-medium transition duration-200" data-candidate="1">
                                        üìã Lihat Visi & Misi
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Candidate 2 -->
                    <div class="border-2 border-gray-200 rounded-lg p-6 cursor-pointer transition duration-300 candidate-card candidate-hover" data-candidate="2">
                        <div class="flex items-start space-x-4">
                            <div class="flex-shrink-0">
                                <img src="https://freeimage.host/i/KhicFNj" alt="Muhammad Solehudin" class="w-20 h-20 rounded-full object-cover border-4 border-green-200 shadow-lg" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="w-20 h-20 rounded-full bg-gradient-to-br from-green-400 to-green-600 flex items-center justify-center text-white text-2xl font-bold border-4 border-green-200 shadow-lg" style="display: none;">
                                    MS
                                </div>
                                <div class="text-center mt-2">
                                    <span class="inline-block bg-green-500 text-white px-3 py-1 rounded-full text-sm font-bold">02</span>
                                </div>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-xl font-semibold text-gray-900">Muhammad Solehudin</h4>
                                <p class="text-green-600 font-medium">Kelas XI-5</p>
                                <div class="mt-3 flex gap-2">
                                    <button class="visi-misi-btn bg-green-100 hover:bg-green-200 text-green-800 px-3 py-1 rounded-lg text-sm font-medium transition duration-200" data-candidate="2">
                                        üìã Lihat Visi & Misi
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Candidate 3 -->
                    <div class="border-2 border-gray-200 rounded-lg p-6 cursor-pointer transition duration-300 candidate-card candidate-hover" data-candidate="3">
                        <div class="flex items-start space-x-4">
                            <div class="flex-shrink-0">
                                <img src="https://freeimage.host/i/Khichx4" alt="Natasya Damayanti" class="w-20 h-20 rounded-full object-cover border-4 border-purple-200 shadow-lg" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="w-20 h-20 rounded-full bg-gradient-to-br from-purple-400 to-purple-600 flex items-center justify-center text-white text-2xl font-bold border-4 border-purple-200 shadow-lg" style="display: none;">
                                    ND
                                </div>
                                <div class="text-center mt-2">
                                    <span class="inline-block bg-purple-500 text-white px-3 py-1 rounded-full text-sm font-bold">03</span>
                                </div>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-xl font-semibold text-gray-900">Natasya Damayanti</h4>
                                <p class="text-purple-600 font-medium">Kelas XI-7</p>
                                <div class="mt-3 flex gap-2">
                                    <button class="visi-misi-btn bg-purple-100 hover:bg-purple-200 text-purple-800 px-3 py-1 rounded-lg text-sm font-medium transition duration-200" data-candidate="3">
                                        üìã Lihat Visi & Misi
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <button id="submitVote" class="w-full mt-8 bg-gradient-to-r from-green-600 to-blue-600 text-white py-4 px-4 rounded-lg font-semibold text-lg hover:from-green-700 hover:to-blue-700 focus:ring-4 focus:ring-green-300 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed transform hover:scale-105" disabled>
                    üó≥Ô∏è Konfirmasi Pilihan Saya
                </button>

                <div class="mt-4 text-center">
                    <button id="logoutBtn" class="text-gray-500 hover:text-gray-700 text-sm underline">
                        Keluar dari Sistem
                    </button>
                </div>
            </div>

            <!-- Confirmation Modal (Hidden initially) -->
            <div id="confirmationModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
                <div class="bg-white rounded-xl card-shadow max-w-md w-full">
                    <div class="p-6">
                        <div class="text-center mb-6">
                            <div class="w-16 h-16 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                                </svg>
                            </div>
                            <h3 class="text-xl font-bold text-gray-900 mb-2">Konfirmasi Pilihan Anda</h3>
                            <p class="text-gray-600">Pastikan pilihan Anda sudah benar. Setelah dikonfirmasi, pilihan tidak dapat diubah.</p>
                        </div>
                        
                        <div id="confirmationContent" class="bg-blue-50 rounded-lg p-4 mb-6">
                            <!-- Content will be populated by JavaScript -->
                        </div>
                        
                        <div class="flex gap-3">
                            <button id="cancelConfirmation" class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200 font-medium">
                                ‚ùå Batal
                            </button>
                            <button id="finalConfirmVote" class="flex-1 bg-gradient-to-r from-green-600 to-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:from-green-700 hover:to-blue-700 transition duration-200">
                                ‚úÖ Ya, Saya Yakin
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reset Confirmation Modal (Hidden initially) -->
            <div id="resetConfirmationModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
                <div class="bg-white rounded-xl card-shadow max-w-lg w-full">
                    <div class="p-6">
                        <div class="text-center mb-6">
                            <div class="w-20 h-20 bg-gradient-to-br from-red-500 to-red-700 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </div>
                            <h3 class="text-2xl font-bold text-gray-900 mb-2">üö® RESET SISTEM PEMILIHAN</h3>
                            <p class="text-gray-600 text-lg">Tindakan ini akan menghapus SEMUA data hasil pemilihan dan tidak dapat dibatalkan!</p>
                        </div>
                        
                        <!-- Current Statistics -->
                        <div class="bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4 mb-6">
                            <h4 class="font-semibold text-blue-900 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                </svg>
                                Statistik Saat Ini
                            </h4>
                            <div class="grid grid-cols-2 gap-4 text-sm">
                                <div class="bg-white rounded-lg p-3 text-center">
                                    <div class="text-2xl font-bold text-blue-600" id="resetTotalVotes">0</div>
                                    <div class="text-gray-600">Total Suara</div>
                                </div>
                                <div class="bg-white rounded-lg p-3 text-center">
                                    <div class="text-2xl font-bold text-green-600" id="resetVotedCount">0</div>
                                    <div class="text-gray-600">Siswa Memilih</div>
                                </div>
                                <div class="bg-white rounded-lg p-3 text-center">
                                    <div class="text-2xl font-bold text-purple-600" id="resetActivitiesCount">0</div>
                                    <div class="text-gray-600">Log Aktivitas</div>
                                </div>
                                <div class="bg-white rounded-lg p-3 text-center">
                                    <div class="text-2xl font-bold text-orange-600" id="resetParticipationRate">0%</div>
                                    <div class="text-gray-600">Partisipasi</div>
                                </div>
                            </div>
                        </div>

                        <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
                            <h4 class="font-semibold text-red-900 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                                </svg>
                                Data yang akan dihapus:
                            </h4>
                            <ul class="text-sm text-red-800 space-y-2">
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Semua suara yang telah masuk (<span class="font-semibold" id="resetTotalVotes2">0</span> suara)
                                </li>
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Daftar siswa yang sudah memilih (<span class="font-semibold" id="resetVotedCount2">0</span> siswa)
                                </li>
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Timestamp waktu pemilihan setiap siswa
                                </li>
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Hasil sementara dan statistik pemilihan
                                </li>
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Log aktivitas dan riwayat sistem
                                </li>
                                <li class="flex items-center">
                                    <span class="w-2 h-2 bg-red-500 rounded-full mr-3"></span>
                                    Data partisipasi per kelas
                                </li>
                            </ul>
                        </div>

                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
                            <div class="flex items-start space-x-3">
                                <svg class="w-5 h-5 text-yellow-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <div>
                                    <p class="text-sm font-semibold text-yellow-800">Yang TIDAK akan terhapus:</p>
                                    <ul class="text-sm text-yellow-700 mt-1 space-y-1">
                                        <li>‚Ä¢ Data siswa dari spreadsheet (NIS, nama, kelas)</li>
                                        <li>‚Ä¢ Pengaturan sistem dan konfigurasi admin</li>
                                        <li>‚Ä¢ Data kandidat dan visi misi</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <!-- Confirmation Input -->
                        <div class="bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                Ketik "RESET SEMUA" untuk mengonfirmasi:
                            </label>
                            <input 
                                type="text" 
                                id="resetConfirmationInput" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500" 
                                placeholder="Ketik: RESET SEMUA"
                                autocomplete="off"
                            >
                            <p class="text-xs text-gray-500 mt-1">Pastikan Anda mengetik dengan benar (case sensitive)</p>
                        </div>
                        
                        <div class="flex gap-3">
                            <button onclick="closeResetConfirmation()" class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200 font-medium">
                                ‚ùå Batal
                            </button>
                            <button id="confirmResetBtn" onclick="confirmResetResults()" class="flex-1 bg-gray-400 text-white py-3 px-4 rounded-lg font-semibold cursor-not-allowed transition duration-200" disabled>
                                üóëÔ∏è Ya, Reset Semua
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Visi Misi Modal (Hidden initially) -->
            <div id="visiMisiModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
                <div class="bg-white rounded-xl card-shadow max-w-2xl w-full max-h-[90vh] overflow-y-auto">
                    <div class="p-6">
                        <div class="flex justify-between items-center mb-6">
                            <h3 id="modalTitle" class="text-2xl font-bold text-gray-900"></h3>
                            <button id="closeModal" class="text-gray-400 hover:text-gray-600 text-2xl font-bold">√ó</button>
                        </div>
                        
                        <div id="modalContent" class="space-y-6">
                            <!-- Content will be populated by JavaScript -->
                        </div>
                        
                        <div class="mt-8 flex gap-4">
                            <button id="selectFromModal" class="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 px-4 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition duration-200">
                                üó≥Ô∏è Pilih Kandidat Ini
                            </button>
                            <button id="closeModalBtn" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200">
                                Tutup
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Results Page (Hidden initially) -->
            <div id="resultsSection" class="hidden bg-white rounded-xl card-shadow p-8">
                <div class="text-center mb-8">
                    <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2">Hasil Sementara Pemilihan</h3>
                    <p class="text-gray-600">Ketua OSIS SMAN 1 Pamijahan</p>
                </div>

                <div class="space-y-4 mb-8" id="resultsDisplay">
                    <!-- Results will be populated by JavaScript -->
                </div>

                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
                    <div class="flex items-start space-x-3">
                        <svg class="w-5 h-5 text-yellow-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <div>
                            <p class="text-sm font-medium text-yellow-800">Catatan Penting</p>
                            <p class="text-sm text-yellow-700 mt-1">Ini adalah hasil sementara dan dapat berubah seiring berjalannya pemilihan. Hasil resmi akan diumumkan setelah periode voting berakhir.</p>
                        </div>
                    </div>
                </div>

                <div class="flex gap-3">
                    <button id="backToVotingBtn" class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200 font-medium">
                        ‚Üê Kembali ke Pemilihan
                    </button>
                    <button id="refreshResultsBtn" class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200 font-medium">
                        üîÑ Refresh
                    </button>
                </div>
            </div>

            <!-- Success Page (Hidden initially) -->
            <div id="successSection" class="hidden bg-white rounded-xl card-shadow p-8 text-center">
                <div class="w-20 h-20 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg">
                    <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7"></path>
                    </svg>
                </div>
                <h3 class="text-3xl font-bold text-gray-900 mb-4">Suara Berhasil Disimpan! üéâ</h3>
                <p class="text-gray-600 mb-6 text-lg">Terima kasih telah berpartisipasi dalam pemilihan ketua OSIS SMAN 1 Pamijahan.</p>
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                    <p class="text-blue-800 font-medium">Pilihan Anda:</p>
                    <p id="selectedCandidateName" class="text-blue-900 text-xl font-bold mt-1"></p>
                </div>
                <p class="text-sm text-gray-500 mb-6">Hasil pemilihan akan diumumkan setelah periode voting berakhir.</p>
                <button id="newVoteBtn" class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-lg transition duration-200">
                    Pemilihan Baru
                </button>
            </div>
        </div>
    </div>

    <!-- Admin Dashboard (Hidden initially) -->
    <div id="adminDashboard" class="hidden min-h-full bg-gray-100">
        <!-- Sidebar -->
        <div id="sidebar" class="fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg sidebar-transition">
            <div class="flex items-center justify-between h-16 px-6 bg-gradient-to-r from-blue-600 to-purple-600">
                <h1 class="text-white font-bold text-lg">Admin Panel</h1>
                <button id="closeSidebar" class="text-white md:hidden">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <nav class="mt-8">
                <div class="px-6 mb-6">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                            <span class="text-white font-bold">A</span>
                        </div>
                        <div>
                            <p class="text-sm font-medium text-gray-900">Administrator</p>
                            <p class="text-xs text-gray-500">OSIS SMAN 1 Pamijahan</p>
                        </div>
                    </div>
                </div>
                
                <ul class="space-y-2 px-4">
                    <li>
                        <button class="nav-btn w-full flex items-center px-4 py-3 text-left text-gray-700 rounded-lg hover:bg-blue-50 hover:text-blue-700 transition duration-200 bg-blue-50 text-blue-700" data-section="dashboard">
                            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
                            </svg>
                            Dashboard
                        </button>
                    </li>
                    <li>
                        <button class="nav-btn w-full flex items-center px-4 py-3 text-left text-gray-700 rounded-lg hover:bg-blue-50 hover:text-blue-700 transition duration-200" data-section="reports">
                            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            Laporan
                        </button>
                    </li>
                    <li>
                        <button class="nav-btn w-full flex items-center px-4 py-3 text-left text-gray-700 rounded-lg hover:bg-blue-50 hover:text-blue-700 transition duration-200" data-section="voters">
                            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                            </svg>
                            Data Pemilih
                        </button>
                    </li>
                </ul>
                
                <div class="absolute bottom-4 left-4 right-4">
                    <button id="adminLogoutBtn" class="w-full flex items-center justify-center px-4 py-3 text-red-600 hover:bg-red-50 rounded-lg transition duration-200">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                        </svg>
                        Logout
                    </button>
                </div>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="md:ml-64">
            <!-- Top Bar -->
            <div class="bg-white shadow-sm border-b border-gray-200">
                <div class="flex items-center justify-between h-16 px-6">
                    <div class="flex items-center">
                        <button id="openSidebar" class="text-gray-500 md:hidden mr-4">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                            </svg>
                        </button>
                        <h2 id="pageTitle" class="text-xl font-semibold text-gray-900">Dashboard</h2>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-500" id="currentTime"></span>
                        <div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                            <span class="text-white text-sm font-bold">A</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Dashboard Content -->
            <div id="dashboardContent" class="p-6">
                <div class="mb-8">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2">Selamat Datang, Administrator!</h3>
                    <p class="text-gray-600">Kelola pemilihan ketua OSIS SMAN 1 Pamijahan dengan mudah</p>
                </div>

                <!-- Stats Cards -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg card-shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100">
                                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                </svg>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-500">Total Pemilih</p>
                                <p class="text-2xl font-bold text-gray-900" id="totalVoters">1,247</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg card-shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100">
                                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-500">Sudah Memilih</p>
                                <p class="text-2xl font-bold text-gray-900" id="votedCount">892</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg card-shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-yellow-100">
                                <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-500">Belum Memilih</p>
                                <p class="text-2xl font-bold text-gray-900" id="notVotedCount">355</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg card-shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-purple-100">
                                <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
                                </svg>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-500">Partisipasi</p>
                                <p class="text-2xl font-bold text-gray-900" id="participationRate">71.5%</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <div class="bg-white rounded-lg card-shadow p-6">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4">Hasil Sementara Pemilihan</h4>
                        <canvas id="voteChart" width="400" height="200"></canvas>
                    </div>

                    <div class="bg-white rounded-lg card-shadow p-6">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4">Partisipasi per Kelas</h4>
                        <canvas id="classChart" width="400" height="200"></canvas>
                    </div>
                </div>



                <!-- Hasil Sementara Pemilihan -->
                <div class="bg-white rounded-lg card-shadow p-6 mb-8">
                    <div class="flex items-center justify-between mb-6">
                        <h4 class="text-lg font-semibold text-gray-900">üèÜ Hasil Sementara Pemilihan</h4>
                        <button onclick="refreshResults()" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200 text-sm font-medium">
                            üîÑ Refresh
                        </button>
                    </div>
                    
                    <div class="space-y-4" id="dashboardResults">
                        <!-- Results will be populated by JavaScript -->
                    </div>
                    
                    <div class="mt-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2-2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <p class="text-sm font-medium text-gray-900">Total Suara Masuk</p>
                                    <p class="text-2xl font-bold text-blue-600" id="dashboardTotalVotes">0</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <p class="text-sm text-gray-600">Tingkat Partisipasi</p>
                                <p class="text-xl font-bold text-purple-600" id="dashboardParticipation">0%</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Reset & Management -->
                <div class="bg-white rounded-lg card-shadow p-6 mb-8">
                    <h4 class="text-lg font-semibold text-gray-900 mb-4">üîß Pengaturan Pemilihan</h4>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Refresh Data -->
                        <div class="p-4 border border-blue-200 rounded-lg bg-blue-50">
                            <div class="flex items-center space-x-3 mb-3">
                                <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h5 class="font-semibold text-blue-900">Refresh Data Siswa</h5>
                                    <p class="text-sm text-blue-700">Sinkronisasi dengan spreadsheet</p>
                                </div>
                            </div>
                            <button onclick="refreshStudentData()" class="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition duration-200 text-sm font-medium">
                                üîÑ Refresh Data dari Spreadsheet
                            </button>
                        </div>

                        <!-- Reset Results -->
                        <div class="p-4 border border-red-200 rounded-lg bg-red-50">
                            <div class="flex items-center space-x-3 mb-3">
                                <div class="w-10 h-10 bg-red-500 rounded-full flex items-center justify-center">
                                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h5 class="font-semibold text-red-900">Reset Hasil Pemilihan</h5>
                                    <p class="text-sm text-red-700">Hapus semua data suara</p>
                                </div>
                            </div>
                            <button onclick="showResetConfirmation()" class="w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg transition duration-200 text-sm font-medium">
                                üóëÔ∏è Reset Semua Hasil
                            </button>
                        </div>
                    </div>

                    <div class="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
                        <div class="flex items-start space-x-2">
                            <svg class="w-5 h-5 text-yellow-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                            </svg>
                            <div>
                                <p class="text-sm font-medium text-yellow-800">Catatan Penting:</p>
                                <p class="text-sm text-yellow-700 mt-1">
                                    ‚Ä¢ <strong>Refresh Data:</strong> Memperbarui daftar siswa dari spreadsheet tanpa menghapus hasil voting<br>
                                    ‚Ä¢ <strong>Reset Hasil:</strong> Menghapus SEMUA data suara dan memulai pemilihan dari awal
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="bg-white rounded-lg card-shadow p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-lg font-semibold text-gray-900">üìä Aktivitas Terbaru</h4>
                        <button onclick="updateRecentActivity()" class="px-3 py-1 bg-blue-100 text-blue-600 rounded-lg hover:bg-blue-200 transition duration-200 text-sm font-medium">
                            üîÑ Refresh
                        </button>
                    </div>
                    <div class="space-y-3" id="recentActivity">
                        <!-- Activity will be populated by JavaScript -->
                    </div>
                </div>
            </div>

            <!-- Reports Content -->
            <div id="reportsContent" class="hidden p-6">
                <div class="mb-8">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2">Laporan Pemilihan</h3>
                    <p class="text-gray-600">Unduh dan lihat laporan detail pemilihan ketua OSIS</p>
                </div>

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Detailed Results -->
                    <div class="bg-white rounded-lg card-shadow p-6">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4">Hasil Detail Pemilihan</h4>
                        <div class="space-y-4" id="detailedResults">
                            <!-- Results will be populated by JavaScript -->
                        </div>
                    </div>

                    <!-- Export Options -->
                    <div class="bg-white rounded-lg card-shadow p-6">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4">Unduh Laporan</h4>
                        <div class="space-y-4">
                            <button class="w-full flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                    </svg>
                                    <div class="text-left">
                                        <p class="font-medium text-gray-900">Laporan PDF</p>
                                        <p class="text-sm text-gray-500">Laporan lengkap dalam format PDF</p>
                                    </div>
                                </div>
                                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                            </button>

                            <button class="w-full flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2H9a2 2 0 00-2 2v10z"></path>
                                    </svg>
                                    <div class="text-left">
                                        <p class="font-medium text-gray-900">Data Excel</p>
                                        <p class="text-sm text-gray-500">Data mentah dalam format Excel</p>
                                    </div>
                                </div>
                                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                            </button>

                            <button class="w-full flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                    </svg>
                                    <div class="text-left">
                                        <p class="font-medium text-gray-900">Grafik & Chart</p>
                                        <p class="text-sm text-gray-500">Visualisasi data dalam bentuk grafik</p>
                                    </div>
                                </div>
                                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                            </button>
                        </div>

                        <div class="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                            <div class="flex items-start space-x-3">
                                <svg class="w-5 h-5 text-yellow-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                                </svg>
                                <div>
                                    <p class="text-sm font-medium text-yellow-800">Catatan Penting</p>
                                    <p class="text-sm text-yellow-700 mt-1">Laporan ini bersifat rahasia dan hanya untuk keperluan administrasi sekolah.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Voters Data Content -->
            <div id="votersContent" class="hidden p-6">
                <div class="mb-8">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2">Data Pemilih</h3>
                    <p class="text-gray-600">Kelola dan pantau data pemilih yang terdaftar</p>
                </div>

                <div class="bg-white rounded-lg card-shadow">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
                            <h4 class="text-lg font-semibold text-gray-900 mb-4 sm:mb-0">Daftar Pemilih Terdaftar</h4>
                            <div class="flex space-x-3">
                                <input type="text" id="voterSearchInput" placeholder="Cari NIS, nama, atau kelas..." class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-64">
                                <button id="clearSearchBtn" class="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition duration-200">
                                    ‚úï Bersihkan
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">NIS</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nama Siswa</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Kelas</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Waktu Memilih</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200" id="votersTable">
                                <!-- Voter data will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>

                    <div class="px-6 py-4 border-t border-gray-200">
                        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                            <div class="pagination-info text-sm text-gray-700">
                                Memuat data pemilih...
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-sm text-gray-500 mr-2">Tampilkan:</span>
                                <select id="itemsPerPageSelect" class="px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="10">10</option>
                                    <option value="20" selected>20</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                </select>
                                <span class="text-sm text-gray-500 mr-4">per halaman</span>
                                <div class="pagination-controls flex space-x-1">
                                    <!-- Pagination buttons will be generated by JavaScript -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let validNISList = [];
        let selectedCandidate = null;
        let currentVoter = null;

        // Admin credentials
        const adminCredentials = {
            username: 'osiskecebong',
            password: 'kecegaksombong24'
        };

        const candidates = {
            '1': 'Aulia Putri Anggraeni',
            '2': 'Muhammad Solehudin', 
            '3': 'Natasya Damayanti'
        };

        const candidateDetails = {
            '1': {
                name: 'Aulia Putri Anggraeni',
                class: 'XI-8',
                image: 'AP',
                imageUrl: 'https://freeimage.host/i/KhiY9X2',
                visi: 'Terwujudnya Siswa/i SMA NEGERI 1 PAMIJAHAN Menjadi Lebih Disiplin, Sopan, Dan Tanggung Jawab.',
                misi: [
                    'Meningkatkan Keimanan Dan Ketakwaan Terhadap Tuhan Yang Maha Esa.',
                    'Menerapkan Sikap 3R (Ramah, Rapih, Resik).',
                    'Menerapkan Budaya 5S (Senyum, Sapa, Salam, Sopan, Santun).',
                    'Menerapkan Sikap Peduli Sampah Dengan Melaksanakan Operasi Semut.'
                ],
                program: [
                    'KOSAKCA (Kotak Saran dan Kritik Acara)',
                    'Mading Poster Hari Besar Nasional',
                    'Mengadakan Kumpul Evaluasi OSIS Setiap Sebulan 2√ó',
                    'JUMSIH (Jumat Bersih)'
                ]
            },
            '2': {
                name: 'Muhammad Solehudin',
                class: 'XI-5',
                image: 'MS',
                imageUrl: 'https://freeimage.host/i/KhicFNj',
                visi: 'Terwujudnya OSIS SMA Negeri 1 Pamijahan menjadi salah satu organisasi yang visioner dan sebagai wadah aspirasi untuk menuju generasi yang berkualitas kompeten dan kreatif.',
                misi: [
                    'Membangun budaya kolaborasi yang hangat dan inklusif',
                    'Meningkatkan semangat kebersamaan dan solidaritas antar siswa melalui kegiatan yang positif',
                    'Menanamkan nilai-nilai sikap disiplin dan jujur bertanggung jawab serta peduli pada lingkungan'
                ],
                program: [
                    'SPASI (Sarana Penampung Aspirasi)',
                    'STAR OF SMANJA (Bintang SMAN 1 Pamijahan)',
                    'FKOS (Forum Komunikasi Organisasi/Ekstrakurikuler SMANJA)'
                ]
            },
            '3': {
                name: 'Natasya Damayanti',
                class: 'XI-7',
                image: 'ND',
                imageUrl: 'https://freeimage.host/i/Khichx4',
                visi: 'Mewujudkan OSIS yang komunikatif, bertanggung jawab, dan kreatif, serta menjadi wadah aspirasi siswa untuk menciptakan lingkungan sekolah yang disiplin, bersih, dan berkarakter literasi.',
                misi: [
                    'Membangun komunikasi aktif antar pengurus melalui rapat evaluasi rutin setiap bulan.',
                    'Melatih tanggung jawab setiap pengurus dengan pembagian tugas yang jelas, adil, dan terarah.',
                    'Menjadi penghubung antara siswa dan sekolah, terutama dalam hal kedisiplinan, kebersihan, dan aspirasi siswa.',
                    'Menjadikan OSIS bukan hanya sekadar organisasi formal, tetapi juga rumah untuk belajar kepemimpinan dan membangun solidaritas.'
                ],
                program: [
                    'Rapat Evaluasi Bulanan',
                    'Program Disiplin Kreatif Kampanye "Bangga Taat Aturan"',
                    'Green & Clean Movement',
                    'Next Level Student',
                    'Jembatan Ide'
                ]
            }
        };

        // Current time display
        function updateTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('id-ID', { 
                hour: '2-digit', 
                minute: '2-digit',
                second: '2-digit'
            });
            const dateString = now.toLocaleDateString('id-ID', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            const currentTimeElement = document.getElementById('currentTime');
            if (currentTimeElement) {
                currentTimeElement.textContent = `${dateString}, ${timeString}`;
            }
        }

        // Update time every second
        setInterval(updateTime, 1000);
        updateTime();

        // Voting tracking system - COMPLETELY FRESH START
        let votedNISList = [];
        let voteResults = {"1": 0, "2": 0, "3": 0};
        let recentActivities = [];
        
        // Force clear ALL existing data in localStorage for completely fresh start
        localStorage.clear();
        localStorage.removeItem('votedNIS');
        localStorage.removeItem('voteResults');
        localStorage.removeItem('voteTimestamps');
        localStorage.removeItem('recentActivities');

        // Load NIS data from Google Sheets
        async function loadNISData() {
            try {
                const response = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vTHMIyoOCCUiaKLNwGR1-Ag6qzfC_-9YmY7dD5P2UxD2TzhtDE53Dp3X3Cr6bSYZt1g4_yBRqm4QP0S/pub?gid=0&single=true&output=csv');
                const csvText = await response.text();
                const lines = csvText.split('\n');
                
                // Load existing vote timestamps
                const voteTimestamps = JSON.parse(localStorage.getItem('voteTimestamps') || '{}');
                
                validNISList = []; // Clear existing data
                
                // Parse CSV data - assuming columns: NIS, Nama, Kelas
                for (let i = 1; i < lines.length; i++) {
                    const line = lines[i].trim();
                    if (!line) continue;
                    
                    // Handle CSV parsing with potential commas in names
                    const columns = [];
                    let current = '';
                    let inQuotes = false;
                    
                    for (let j = 0; j < line.length; j++) {
                        const char = line[j];
                        if (char === '"') {
                            inQuotes = !inQuotes;
                        } else if (char === ',' && !inQuotes) {
                            columns.push(current.trim().replace(/^"|"$/g, ''));
                            current = '';
                        } else {
                            current += char;
                        }
                    }
                    columns.push(current.trim().replace(/^"|"$/g, ''));
                    
                    if (columns[0] && columns[0].trim()) {
                        const nis = columns[0].trim();
                        const name = columns[1] ? columns[1].trim() : 'Siswa';
                        const kelas = columns[2] ? columns[2].trim() : '-';
                        const hasVoted = votedNISList.includes(nis);
                        
                        validNISList.push({
                            nis: nis,
                            name: name,
                            kelas: kelas,
                            hasVoted: hasVoted,
                            voteTime: hasVoted ? voteTimestamps[nis] : null
                        });
                    }
                }
                
                console.log('Loaded NIS data:', validNISList.length, 'students');
                console.log('Already voted:', votedNISList.length, 'students');
                
                // Add initial load activity if this is the first time
                if (recentActivities.length === 0) {
                    addActivity('system', `üìä Sistem dimuat - ${validNISList.length} siswa terdaftar dari spreadsheet`, {
                        action: 'initial_load',
                        studentCount: validNISList.length
                    });
                }
                
                updateAdminStats();
                
                // Update voters table if admin dashboard is open
                if (!document.getElementById('adminDashboard').classList.contains('hidden')) {
                    updateVotersTable();
                }
                
                return Promise.resolve(); // Return resolved promise for success
                
            } catch (error) {
                console.error('Error loading NIS data:', error);
                // Show error message to user
                const errorDiv = document.createElement('div');
                errorDiv.className = 'bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4';
                errorDiv.innerHTML = `
                    <div class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                        </svg>
                        Gagal memuat data dari spreadsheet. Silakan coba lagi atau hubungi administrator.
                    </div>
                `;
                const loginSection = document.getElementById('loginSection');
                if (loginSection) {
                    loginSection.insertBefore(errorDiv, loginSection.firstChild);
                }
                
                return Promise.reject(error); // Return rejected promise for error
            }
        }

        // Add activity to recent activities
        function addActivity(type, message, details = {}) {
            const activity = {
                id: Date.now() + Math.random(),
                type: type,
                message: message,
                timestamp: new Date().toISOString(),
                details: details
            };
            
            // Add to beginning of array
            recentActivities.unshift(activity);
            
            // Keep only last 50 activities
            if (recentActivities.length > 50) {
                recentActivities = recentActivities.slice(0, 50);
            }
            
            // Save to localStorage
            localStorage.setItem('recentActivities', JSON.stringify(recentActivities));
            
            // Update display if admin dashboard is open
            if (!document.getElementById('adminDashboard').classList.contains('hidden')) {
                updateRecentActivity();
            }
        }

        // Save vote to localStorage and update results
        function saveVote(nis, candidateId) {
            const voteTimestamp = new Date().toISOString();
            
            // Add to voted list with timestamp
            if (!votedNISList.includes(nis)) {
                votedNISList.push(nis);
                localStorage.setItem('votedNIS', JSON.stringify(votedNISList));
            }
            
            // Save vote timestamp
            let voteTimestamps = JSON.parse(localStorage.getItem('voteTimestamps') || '{}');
            voteTimestamps[nis] = voteTimestamp;
            localStorage.setItem('voteTimestamps', JSON.stringify(voteTimestamps));
            
            // Update vote results
            voteResults[candidateId] = (voteResults[candidateId] || 0) + 1;
            localStorage.setItem('voteResults', JSON.stringify(voteResults));
            
            // Update voter status in validNISList
            const voter = validNISList.find(v => v.nis === nis);
            if (voter) {
                voter.hasVoted = true;
                voter.voteTime = voteTimestamp;
            }
            
            // Add activity log
            const candidateName = candidates[candidateId];
            addActivity('vote', `Siswa ${voter ? voter.name : 'Unknown'} (NIS: ${nis}) telah memberikan suara untuk ${candidateName}`, {
                nis: nis,
                candidateId: candidateId,
                candidateName: candidateName,
                voterName: voter ? voter.name : 'Unknown',
                voterClass: voter ? voter.kelas : '-',
                timestamp: voteTimestamp
            });
            
            console.log('Vote saved:', { nis, candidateId, timestamp: voteTimestamp, results: voteResults });
        }

        // Check if NIS has already voted
        function hasAlreadyVoted(nis) {
            return votedNISList.includes(nis);
        }

        // Reset and refresh functions
        function showResetConfirmation() {
            // Update reset modal with current statistics
            const totalVotes = Object.values(voteResults).reduce((a, b) => a + b, 0);
            const votedCount = votedNISList.length;
            const totalVoters = validNISList.length;
            const participationRate = totalVoters > 0 ? ((votedCount / totalVoters) * 100).toFixed(1) : 0;
            const activitiesCount = recentActivities.length;
            
            // Update all statistics in modal
            const resetTotalVotesEl = document.getElementById('resetTotalVotes');
            const resetVotedCountEl = document.getElementById('resetVotedCount');
            const resetTotalVotes2El = document.getElementById('resetTotalVotes2');
            const resetVotedCount2El = document.getElementById('resetVotedCount2');
            const resetActivitiesCountEl = document.getElementById('resetActivitiesCount');
            const resetParticipationRateEl = document.getElementById('resetParticipationRate');
            
            if (resetTotalVotesEl) resetTotalVotesEl.textContent = totalVotes;
            if (resetVotedCountEl) resetVotedCountEl.textContent = votedCount;
            if (resetTotalVotes2El) resetTotalVotes2El.textContent = totalVotes;
            if (resetVotedCount2El) resetVotedCount2El.textContent = votedCount;
            if (resetActivitiesCountEl) resetActivitiesCountEl.textContent = activitiesCount;
            if (resetParticipationRateEl) resetParticipationRateEl.textContent = participationRate + '%';
            
            // Reset confirmation input
            const confirmationInput = document.getElementById('resetConfirmationInput');
            const confirmBtn = document.getElementById('confirmResetBtn');
            
            if (confirmationInput) {
                confirmationInput.value = '';
                confirmationInput.addEventListener('input', function() {
                    if (this.value === 'RESET SEMUA') {
                        confirmBtn.disabled = false;
                        confirmBtn.classList.remove('bg-gray-400', 'cursor-not-allowed');
                        confirmBtn.classList.add('bg-gradient-to-r', 'from-red-600', 'to-red-700', 'hover:from-red-700', 'hover:to-red-800');
                    } else {
                        confirmBtn.disabled = true;
                        confirmBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
                        confirmBtn.classList.remove('bg-gradient-to-r', 'from-red-600', 'to-red-700', 'hover:from-red-700', 'hover:to-red-800');
                    }
                });
            }
            
            // Reset button state
            if (confirmBtn) {
                confirmBtn.disabled = true;
                confirmBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
                confirmBtn.classList.remove('bg-gradient-to-r', 'from-red-600', 'to-red-700', 'hover:from-red-700', 'hover:to-red-800');
            }
            
            document.getElementById('resetConfirmationModal').classList.remove('hidden');
        }

        function closeResetConfirmation() {
            document.getElementById('resetConfirmationModal').classList.add('hidden');
            
            // Clear confirmation input
            const confirmationInput = document.getElementById('resetConfirmationInput');
            if (confirmationInput) {
                confirmationInput.value = '';
            }
        }

        function confirmResetResults() {
            // Check confirmation input
            const confirmationInput = document.getElementById('resetConfirmationInput');
            if (!confirmationInput || confirmationInput.value !== 'RESET SEMUA') {
                showNotification('‚ùå Konfirmasi tidak valid. Ketik "RESET SEMUA" dengan benar.', 'error');
                return;
            }

            // Show loading state
            const confirmBtn = document.getElementById('confirmResetBtn');
            const originalText = confirmBtn.innerHTML;
            confirmBtn.innerHTML = '‚è≥ Mereset sistem...';
            confirmBtn.disabled = true;

            // Simulate processing delay for better UX
            setTimeout(() => {
                try {
                    // Store current statistics for logging
                    const beforeReset = {
                        totalVotes: Object.values(voteResults).reduce((a, b) => a + b, 0),
                        votedCount: votedNISList.length,
                        activitiesCount: recentActivities.length,
                        timestamp: new Date().toISOString()
                    };

                    // Clear all voting data
                    votedNISList = [];
                    voteResults = {"1": 0, "2": 0, "3": 0};
                    
                    // Clear localStorage
                    localStorage.setItem('votedNIS', JSON.stringify(votedNISList));
                    localStorage.setItem('voteResults', JSON.stringify(voteResults));
                    localStorage.setItem('voteTimestamps', JSON.stringify({}));
                    
                    // Clear activities but add reset log first
                    recentActivities = [];
                    localStorage.setItem('recentActivities', JSON.stringify(recentActivities));
                    
                    // Update voter status in validNISList
                    validNISList.forEach(voter => {
                        voter.hasVoted = false;
                        delete voter.voteTime;
                    });
                    
                    // Add reset activity log
                    addActivity('system', `üîÑ SISTEM DIRESET TOTAL - ${beforeReset.totalVotes} suara dan ${beforeReset.votedCount} pemilih dihapus oleh administrator`, {
                        action: 'complete_reset',
                        beforeReset: beforeReset,
                        resetBy: 'administrator',
                        resetTime: new Date().toISOString()
                    });
                    
                    // Close modal
                    closeResetConfirmation();
                    
                    // Update all displays
                    updateAdminStats();
                    updateDashboardResults();
                    updateAdminCharts();
                    updateVotersTable();
                    updateDetailedResults();
                    updateRecentActivity();
                    
                    // Show success notification
                    showNotification('‚úÖ SISTEM BERHASIL DIRESET! Semua data pemilihan telah dihapus dan sistem siap untuk pemilihan baru.', 'success');
                    
                    console.log('Complete system reset performed:', beforeReset);
                    
                } catch (error) {
                    console.error('Error during reset:', error);
                    showNotification('‚ùå Terjadi kesalahan saat mereset sistem. Silakan coba lagi.', 'error');
                    
                    // Restore button
                    confirmBtn.innerHTML = originalText;
                    confirmBtn.disabled = false;
                }
            }, 2000); // 2 second delay for better UX
        }

        function refreshStudentData() {
            const refreshBtn = event.target;
            const originalText = refreshBtn.innerHTML;
            refreshBtn.innerHTML = '‚è≥ Memuat ulang...';
            refreshBtn.disabled = true;
            
            const previousCount = validNISList.length;
            
            // Reload NIS data from spreadsheet
            loadNISData().then(() => {
                const newCount = validNISList.length;
                const difference = newCount - previousCount;
                
                refreshBtn.innerHTML = originalText;
                refreshBtn.disabled = false;
                
                // Add activity log
                if (difference > 0) {
                    addActivity('system', `üìä Data siswa diperbarui - ${difference} siswa baru ditambahkan (Total: ${newCount} siswa)`, {
                        action: 'refresh_data',
                        previousCount: previousCount,
                        newCount: newCount,
                        difference: difference
                    });
                } else if (difference < 0) {
                    addActivity('system', `üìä Data siswa diperbarui - ${Math.abs(difference)} siswa dihapus (Total: ${newCount} siswa)`, {
                        action: 'refresh_data',
                        previousCount: previousCount,
                        newCount: newCount,
                        difference: difference
                    });
                } else {
                    addActivity('system', `üìä Data siswa diperbarui - Tidak ada perubahan (Total: ${newCount} siswa)`, {
                        action: 'refresh_data',
                        previousCount: previousCount,
                        newCount: newCount,
                        difference: 0
                    });
                }
                
                showNotification('‚úÖ Data siswa berhasil diperbarui dari spreadsheet!', 'success');
            }).catch(() => {
                refreshBtn.innerHTML = originalText;
                refreshBtn.disabled = false;
                showNotification('‚ùå Gagal memperbarui data siswa. Silakan coba lagi.', 'error');
            });
        }

        function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 max-w-sm w-full transform transition-all duration-300 translate-x-full`;
            
            const bgColor = type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500';
            
            notification.innerHTML = `
                <div class="${bgColor} text-white px-6 py-4 rounded-lg shadow-lg">
                    <div class="flex items-center justify-between">
                        <p class="text-sm font-medium">${message}</p>
                        <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.remove();
                    }
                }, 300);
            }, 5000);
        }

        // Close reset modal when clicking outside
        document.getElementById('resetConfirmationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeResetConfirmation();
            }
        });

        // Initialize app
        loadNISData();

        // Login tab switching
        document.getElementById('studentLoginTab').addEventListener('click', function() {
            // Switch to student login
            document.getElementById('studentLoginTab').classList.add('bg-white', 'text-blue-600', 'shadow-sm');
            document.getElementById('studentLoginTab').classList.remove('text-gray-500');
            document.getElementById('adminLoginTab').classList.remove('bg-white', 'text-blue-600', 'shadow-sm');
            document.getElementById('adminLoginTab').classList.add('text-gray-500');
            
            document.getElementById('studentLoginForm').classList.remove('hidden');
            document.getElementById('adminLoginForm').classList.add('hidden');
        });

        document.getElementById('adminLoginTab').addEventListener('click', function() {
            // Switch to admin login
            document.getElementById('adminLoginTab').classList.add('bg-white', 'text-red-600', 'shadow-sm');
            document.getElementById('adminLoginTab').classList.remove('text-gray-500');
            document.getElementById('studentLoginTab').classList.remove('bg-white', 'text-blue-600', 'shadow-sm');
            document.getElementById('studentLoginTab').classList.add('text-gray-500');
            
            document.getElementById('adminLoginForm').classList.remove('hidden');
            document.getElementById('studentLoginForm').classList.add('hidden');
        });

        // Student login form handler
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const nisInput = document.getElementById('nis').value.trim();
            const errorMessage = document.getElementById('errorMessage');
            const loadingMessage = document.getElementById('loadingMessage');
            
            if (!nisInput) {
                errorMessage.innerHTML = `
                    <div class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                        </svg>
                        Silakan masukkan NIS Anda.
                    </div>
                `;
                errorMessage.classList.remove('hidden');
                return;
            }
            
            // Show loading
            errorMessage.classList.add('hidden');
            loadingMessage.classList.remove('hidden');
            
            // Simulate verification delay
            setTimeout(() => {
                loadingMessage.classList.add('hidden');
                
                const voter = validNISList.find(student => student.nis === nisInput);
                
                if (!voter) {
                    errorMessage.innerHTML = `
                        <div class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            NIS tidak ditemukan dalam database. Silakan periksa kembali NIS Anda.
                        </div>
                    `;
                    errorMessage.classList.remove('hidden');
                    return;
                }
                
                // Check if already voted
                if (hasAlreadyVoted(nisInput)) {
                    errorMessage.innerHTML = `
                        <div class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            Anda sudah memberikan suara sebelumnya. Setiap siswa hanya dapat memilih satu kali.
                        </div>
                    `;
                    errorMessage.classList.remove('hidden');
                    return;
                }
                
                currentVoter = voter;
                showVotingPage();
            }, 1500);
        });

        // Admin login form handler
        document.getElementById('adminForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('adminUsername').value.trim();
            const password = document.getElementById('adminPassword').value.trim();
            const errorMessage = document.getElementById('adminErrorMessage');
            
            if (username === adminCredentials.username && password === adminCredentials.password) {
                // Add login activity
                addActivity('admin', 'üë®‚Äçüíº Administrator berhasil login ke sistem', {
                    action: 'admin_login',
                    username: username
                });
                
                // Login successful
                document.getElementById('mainContainer').style.display = 'none';
                document.getElementById('adminDashboard').classList.remove('hidden');
                showSection('dashboard');
                initializeCharts();
                updateDashboardResults();
                updateRecentActivity();
            } else {
                // Login failed
                errorMessage.classList.remove('hidden');
                setTimeout(() => {
                    errorMessage.classList.add('hidden');
                }, 3000);
            }
        });

        function showVotingPage() {
            document.getElementById('mainContainer').classList.remove('max-w-md');
            document.getElementById('mainContainer').classList.add('max-w-2xl');
            document.getElementById('loginSection').classList.add('hidden');
            document.getElementById('votingSection').classList.remove('hidden');
            document.getElementById('voterInfo').textContent = `Selamat datang, ${currentVoter.name} (NIS: ${currentVoter.nis}) - Kelas: ${currentVoter.kelas}`;
        }

        // Visi Misi Modal functionality
        let currentModalCandidate = null;

        function showVisiMisiModal(candidateId) {
            const candidate = candidateDetails[candidateId];
            currentModalCandidate = candidateId;
            
            document.getElementById('modalTitle').textContent = `${candidate.name} - Kelas ${candidate.class}`;
            
            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = `
                <div class="text-center mb-6">
                    <img src="${candidate.imageUrl}" alt="${candidate.name}" class="w-24 h-24 rounded-full object-cover mx-auto border-4 border-blue-200 shadow-lg" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                    <div class="w-24 h-24 rounded-full bg-gradient-to-br from-blue-400 to-purple-600 flex items-center justify-center text-white text-3xl font-bold mx-auto border-4 border-blue-200 shadow-lg" style="display: none;">
                        ${candidate.image}
                    </div>
                </div>
                
                <div class="bg-blue-50 rounded-lg p-4 mb-6">
                    <h4 class="text-lg font-semibold text-blue-900 mb-3">üéØ VISI</h4>
                    <p class="text-blue-800 leading-relaxed">${candidate.visi}</p>
                </div>
                
                <div class="bg-green-50 rounded-lg p-4 mb-6">
                    <h4 class="text-lg font-semibold text-green-900 mb-3">üöÄ MISI</h4>
                    <ul class="space-y-2">
                        ${candidate.misi.map((item, index) => `
                            <li class="flex items-start text-green-800">
                                <span class="bg-green-200 text-green-800 rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5 flex-shrink-0">${index + 1}</span>
                                <span class="leading-relaxed">${item}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
                
                <div class="bg-purple-50 rounded-lg p-4">
                    <h4 class="text-lg font-semibold text-purple-900 mb-3">üìã PROGRAM KERJA</h4>
                    <ul class="space-y-2">
                        ${candidate.program.map((item, index) => `
                            <li class="flex items-start text-purple-800">
                                <span class="bg-purple-200 text-purple-800 rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5 flex-shrink-0">${index + 1}</span>
                                <span class="leading-relaxed">${item}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;
            
            document.getElementById('visiMisiModal').classList.remove('hidden');
        }

        function closeVisiMisiModal() {
            document.getElementById('visiMisiModal').classList.add('hidden');
            currentModalCandidate = null;
        }

        // Visi Misi button handlers
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('visi-misi-btn')) {
                e.stopPropagation();
                const candidateId = e.target.dataset.candidate;
                showVisiMisiModal(candidateId);
            }
        });

        // Modal close handlers
        document.getElementById('closeModal').addEventListener('click', closeVisiMisiModal);
        document.getElementById('closeModalBtn').addEventListener('click', closeVisiMisiModal);

        // Select from modal
        document.getElementById('selectFromModal').addEventListener('click', function() {
            if (currentModalCandidate) {
                // Remove previous selection
                document.querySelectorAll('.candidate-card').forEach(c => {
                    c.classList.remove('border-blue-500', 'bg-blue-50', 'ring-2', 'ring-blue-200');
                    c.classList.add('border-gray-200');
                });
                
                // Add selection to chosen candidate
                const candidateCard = document.querySelector(`[data-candidate="${currentModalCandidate}"]`);
                candidateCard.classList.remove('border-gray-200');
                candidateCard.classList.add('border-blue-500', 'bg-blue-50', 'ring-2', 'ring-blue-200');
                
                selectedCandidate = currentModalCandidate;
                document.getElementById('submitVote').disabled = false;
                
                closeVisiMisiModal();
            }
        });

        // Close modal when clicking outside
        document.getElementById('visiMisiModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeVisiMisiModal();
            }
        });

        // Candidate selection
        document.querySelectorAll('.candidate-card').forEach(card => {
            card.addEventListener('click', function(e) {
                // Don't select if clicking on visi-misi button
                if (e.target.classList.contains('visi-misi-btn')) {
                    return;
                }
                
                // Remove previous selection
                document.querySelectorAll('.candidate-card').forEach(c => {
                    c.classList.remove('border-blue-500', 'bg-blue-50', 'ring-2', 'ring-blue-200');
                    c.classList.add('border-gray-200');
                });
                
                // Add selection to clicked card
                this.classList.remove('border-gray-200');
                this.classList.add('border-blue-500', 'bg-blue-50', 'ring-2', 'ring-blue-200');
                
                selectedCandidate = this.dataset.candidate;
                document.getElementById('submitVote').disabled = false;
            });
        });

        // Submit vote - show confirmation modal
        document.getElementById('submitVote').addEventListener('click', function() {
            if (selectedCandidate && currentVoter) {
                showConfirmationModal();
            }
        });

        // Show confirmation modal
        function showConfirmationModal() {
            const candidate = candidateDetails[selectedCandidate];
            const confirmationContent = document.getElementById('confirmationContent');
            
            confirmationContent.innerHTML = `
                <div class="text-center">
                    <div class="w-16 h-16 rounded-full bg-gradient-to-br from-blue-400 to-purple-600 flex items-center justify-center text-white text-xl font-bold mx-auto mb-4">
                        ${candidate.image}
                    </div>
                    <p class="text-sm text-gray-600 mb-2">Anda akan memilih:</p>
                    <p class="text-lg font-bold text-gray-900">${candidate.name}</p>
                    <p class="text-sm text-gray-600">Kelas ${candidate.class}</p>
                </div>
            `;
            
            document.getElementById('confirmationModal').classList.remove('hidden');
        }

        // Close confirmation modal
        function closeConfirmationModal() {
            document.getElementById('confirmationModal').classList.add('hidden');
        }

        // Confirmation modal handlers
        document.getElementById('cancelConfirmation').addEventListener('click', closeConfirmationModal);

        document.getElementById('finalConfirmVote').addEventListener('click', function() {
            if (selectedCandidate && currentVoter) {
                // Save vote to localStorage
                saveVote(currentVoter.nis, selectedCandidate);
                
                // Log vote submission
                console.log(`Vote submitted: Voter ${currentVoter.nis} (${currentVoter.name}) voted for candidate ${selectedCandidate}`);
                
                // Close confirmation modal
                closeConfirmationModal();
                
                // Show success page
                document.getElementById('selectedCandidateName').textContent = candidates[selectedCandidate];
                document.getElementById('votingSection').classList.add('hidden');
                document.getElementById('successSection').classList.remove('hidden');
                
                // Update admin dashboard if it's open
                updateAdminStats();
                updateAdminCharts();
            }
        });

        // Close confirmation modal when clicking outside
        document.getElementById('confirmationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeConfirmationModal();
            }
        });

        // Logout functionality
        document.getElementById('logoutBtn').addEventListener('click', function() {
            resetApp();
        });

        // New vote functionality
        document.getElementById('newVoteBtn').addEventListener('click', function() {
            resetApp();
        });

        // Results functionality (admin only)
        document.getElementById('backToVotingBtn').addEventListener('click', function() {
            document.getElementById('resultsSection').classList.add('hidden');
            document.getElementById('votingSection').classList.remove('hidden');
        });

        document.getElementById('refreshResultsBtn').addEventListener('click', function() {
            updateResultsDisplay();
        });



        // Update results display
        function updateResultsDisplay() {
            const resultsDisplay = document.getElementById('resultsDisplay');
            const totalVotes = Object.values(voteResults).reduce((a, b) => a + b, 0);
            
            const candidateData = [
                { id: '1', name: 'Aulia Putri Anggraeni', class: 'XI-8', color: 'blue', votes: voteResults['1'] || 0 },
                { id: '2', name: 'Muhammad Solehudin', class: 'XI-5', color: 'green', votes: voteResults['2'] || 0 },
                { id: '3', name: 'Natasya Damayanti', class: 'XI-7', color: 'purple', votes: voteResults['3'] || 0 }
            ];

            // Sort by votes (descending)
            candidateData.sort((a, b) => b.votes - a.votes);

            resultsDisplay.innerHTML = candidateData.map((candidate, index) => {
                const percentage = totalVotes > 0 ? ((candidate.votes / totalVotes) * 100).toFixed(1) : 0;
                const isLeading = index === 0 && candidate.votes > 0;
                const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : 'ü•â';
                
                return `
                    <div class="relative bg-${candidate.color}-50 border-2 border-${candidate.color}-200 rounded-lg p-6 ${isLeading ? 'ring-2 ring-yellow-400' : ''}">
                        ${isLeading ? '<div class="absolute -top-2 -right-2 bg-yellow-400 text-yellow-900 px-2 py-1 rounded-full text-xs font-bold">MEMIMPIN</div>' : ''}
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4">
                                <div class="text-2xl">${medal}</div>
                                <div class="w-16 h-16 rounded-full bg-gradient-to-br from-${candidate.color}-400 to-${candidate.color}-600 flex items-center justify-center text-white text-xl font-bold">
                                    0${candidate.id}
                                </div>
                                <div>
                                    <h4 class="text-lg font-bold text-gray-900">${candidate.name}</h4>
                                    <p class="text-${candidate.color}-600 font-medium">Kelas ${candidate.class}</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <p class="text-3xl font-bold text-${candidate.color}-600">${candidate.votes}</p>
                                <p class="text-sm text-gray-600">suara (${percentage}%)</p>
                            </div>
                        </div>
                        
                        <!-- Progress bar -->
                        <div class="mt-4">
                            <div class="w-full bg-gray-200 rounded-full h-3">
                                <div class="bg-gradient-to-r from-${candidate.color}-400 to-${candidate.color}-600 h-3 rounded-full transition-all duration-500" style="width: ${percentage}%"></div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');

            // Add total votes info
            const totalVotesInfo = document.createElement('div');
            totalVotesInfo.className = 'text-center mt-6 p-4 bg-gray-50 rounded-lg';
            totalVotesInfo.innerHTML = `
                <p class="text-lg font-semibold text-gray-900">Total Suara Masuk: <span class="text-blue-600">${totalVotes}</span></p>
                <p class="text-sm text-gray-600 mt-1">Dari ${validNISList.length} pemilih terdaftar</p>
            `;
            resultsDisplay.appendChild(totalVotesInfo);
        }

        function resetApp() {
            currentVoter = null;
            selectedCandidate = null;
            document.getElementById('nis').value = '';
            document.getElementById('errorMessage').classList.add('hidden');
            document.getElementById('loadingMessage').classList.add('hidden');
            document.getElementById('submitVote').disabled = true;
            
            // Reset candidate selections
            document.querySelectorAll('.candidate-card').forEach(c => {
                c.classList.remove('border-blue-500', 'bg-blue-50', 'ring-2', 'ring-blue-200');
                c.classList.add('border-gray-200');
            });
            
            // Show login page
            document.getElementById('mainContainer').classList.remove('max-w-2xl');
            document.getElementById('mainContainer').classList.add('max-w-md');
            document.getElementById('mainContainer').style.display = 'block';
            document.getElementById('votingSection').classList.add('hidden');
            document.getElementById('resultsSection').classList.add('hidden');
            document.getElementById('successSection').classList.add('hidden');
            document.getElementById('loginSection').classList.remove('hidden');
            document.getElementById('adminDashboard').classList.add('hidden');
        }

        // Admin Dashboard Functions
        // Sidebar functionality
        document.getElementById('openSidebar').addEventListener('click', function() {
            document.getElementById('sidebar').classList.remove('sidebar-hidden');
        });

        document.getElementById('closeSidebar').addEventListener('click', function() {
            document.getElementById('sidebar').classList.add('sidebar-hidden');
        });

        // Navigation
        document.querySelectorAll('.nav-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const section = this.dataset.section;
                showSection(section);
                
                // Update active state
                document.querySelectorAll('.nav-btn').forEach(b => {
                    b.classList.remove('bg-blue-50', 'text-blue-700');
                    b.classList.add('text-gray-700');
                });
                this.classList.add('bg-blue-50', 'text-blue-700');
                this.classList.remove('text-gray-700');
                
                // Close sidebar on mobile
                if (window.innerWidth < 768) {
                    document.getElementById('sidebar').classList.add('sidebar-hidden');
                }
            });
        });

        function showSection(section) {
            // Hide all sections
            document.getElementById('dashboardContent').classList.add('hidden');
            document.getElementById('reportsContent').classList.add('hidden');
            document.getElementById('votersContent').classList.add('hidden');
            
            // Show selected section
            const sectionMap = {
                'dashboard': 'dashboardContent',
                'reports': 'reportsContent',
                'voters': 'votersContent'
            };
            
            document.getElementById(sectionMap[section]).classList.remove('hidden');
            
            // Update page title
            const titleMap = {
                'dashboard': 'Dashboard',
                'reports': 'Laporan',
                'voters': 'Data Pemilih'
            };
            
            document.getElementById('pageTitle').textContent = titleMap[section];
            
            // Update data based on section
            if (section === 'dashboard') {
                updateDashboardResults();
                updateRecentActivity();
            } else if (section === 'reports') {
                updateDetailedResults();
            } else if (section === 'voters') {
                updateVotersTable();
            }
        }

        // Admin logout
        document.getElementById('adminLogoutBtn').addEventListener('click', function() {
            resetApp();
        });

        // Update admin statistics
        function updateAdminStats() {
            if (!validNISList.length) return;
            
            const totalVoters = validNISList.length;
            const votedCount = votedNISList.length;
            const notVotedCount = totalVoters - votedCount;
            const participationRate = totalVoters > 0 ? ((votedCount / totalVoters) * 100).toFixed(1) : 0;
            
            // Update stats cards
            const totalVotersEl = document.getElementById('totalVoters');
            const votedCountEl = document.getElementById('votedCount');
            const notVotedCountEl = document.getElementById('notVotedCount');
            const participationRateEl = document.getElementById('participationRate');
            
            if (totalVotersEl) totalVotersEl.textContent = totalVoters.toLocaleString();
            if (votedCountEl) votedCountEl.textContent = votedCount.toLocaleString();
            if (notVotedCountEl) notVotedCountEl.textContent = notVotedCount.toLocaleString();
            if (participationRateEl) participationRateEl.textContent = participationRate + '%';
        }

        // Calculate class participation from real data
        function calculateClassParticipation() {
            const classStats = {};
            
            // Initialize class stats
            validNISList.forEach(student => {
                const kelas = student.kelas;
                if (!classStats[kelas]) {
                    classStats[kelas] = { total: 0, voted: 0 };
                }
                classStats[kelas].total++;
                if (student.hasVoted || votedNISList.includes(student.nis)) {
                    classStats[kelas].voted++;
                }
            });
            
            // Sort classes and calculate percentages
            const sortedClasses = Object.keys(classStats).sort();
            const labels = sortedClasses;
            const data = sortedClasses.map(kelas => {
                const stats = classStats[kelas];
                return stats.total > 0 ? Math.round((stats.voted / stats.total) * 100) : 0;
            });
            
            return { labels, data, classStats };
        }

        // Update admin charts
        function updateAdminCharts() {
            if (typeof Chart !== 'undefined' && window.voteChart) {
                // Update vote results chart
                const totalVotes = Object.values(voteResults).reduce((a, b) => a + b, 0);
                window.voteChart.data.datasets[0].data = [
                    voteResults['1'] || 0,
                    voteResults['2'] || 0,
                    voteResults['3'] || 0
                ];
                window.voteChart.update();
                
                // Update class participation chart
                if (window.classChart) {
                    const classParticipationData = calculateClassParticipation();
                    window.classChart.data.labels = classParticipationData.labels;
                    window.classChart.data.datasets[0].data = classParticipationData.data;
                    window.classChart.update();
                }
            }
        }

        // Update recent activity display
        function updateRecentActivity() {
            const recentActivityEl = document.getElementById('recentActivity');
            if (!recentActivityEl) return;
            
            if (recentActivities.length === 0) {
                recentActivityEl.innerHTML = `
                    <div class="text-center py-8">
                        <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                            <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <p class="text-gray-500 font-medium">Belum ada aktivitas</p>
                        <p class="text-gray-400 text-sm">Aktivitas akan muncul setelah ada siswa yang memilih</p>
                    </div>
                `;
                return;
            }
            
            // Show last 10 activities
            const displayActivities = recentActivities.slice(0, 10);
            
            recentActivityEl.innerHTML = displayActivities.map(activity => {
                const timeAgo = getTimeAgo(new Date(activity.timestamp));
                const activityIcon = getActivityIcon(activity.type);
                const activityColor = getActivityColor(activity.type);
                
                return `
                    <div class="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition duration-200">
                        <div class="w-2 h-2 ${activityColor} rounded-full mt-2 flex-shrink-0"></div>
                        <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between">
                                <p class="text-sm text-gray-700 leading-relaxed">${activityIcon} ${activity.message}</p>
                                <span class="text-xs text-gray-500 ml-2 flex-shrink-0">${timeAgo}</span>
                            </div>
                            ${activity.details && activity.details.voterClass ? `
                                <div class="mt-1">
                                    <span class="inline-flex px-2 py-0.5 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
                                        Kelas ${activity.details.voterClass}
                                    </span>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');
            
            // Add "show more" link if there are more activities
            if (recentActivities.length > 10) {
                const showMoreDiv = document.createElement('div');
                showMoreDiv.className = 'text-center pt-3 border-t border-gray-200';
                showMoreDiv.innerHTML = `
                    <button onclick="showAllActivities()" class="text-sm text-blue-600 hover:text-blue-800 font-medium">
                        Lihat ${recentActivities.length - 10} aktivitas lainnya ‚Üí
                    </button>
                `;
                recentActivityEl.appendChild(showMoreDiv);
            }
        }

        // Get activity icon based on type
        function getActivityIcon(type) {
            switch (type) {
                case 'vote': return 'üó≥Ô∏è';
                case 'system': return '‚öôÔ∏è';
                case 'admin': return 'üë®‚Äçüíº';
                default: return 'üìù';
            }
        }

        // Get activity color based on type
        function getActivityColor(type) {
            switch (type) {
                case 'vote': return 'bg-green-500';
                case 'system': return 'bg-blue-500';
                case 'admin': return 'bg-purple-500';
                default: return 'bg-gray-500';
            }
        }

        // Calculate time ago
        function getTimeAgo(date) {
            const now = new Date();
            const diffInSeconds = Math.floor((now - date) / 1000);
            
            if (diffInSeconds < 60) {
                return `${diffInSeconds} detik yang lalu`;
            } else if (diffInSeconds < 3600) {
                const minutes = Math.floor(diffInSeconds / 60);
                return `${minutes} menit yang lalu`;
            } else if (diffInSeconds < 86400) {
                const hours = Math.floor(diffInSeconds / 3600);
                return `${hours} jam yang lalu`;
            } else {
                const days = Math.floor(diffInSeconds / 86400);
                return `${days} hari yang lalu`;
            }
        }

        // Show all activities (could be expanded to a modal)
        function showAllActivities() {
            // For now, just show more activities in the same container
            const recentActivityEl = document.getElementById('recentActivity');
            if (!recentActivityEl) return;
            
            recentActivityEl.innerHTML = recentActivities.map(activity => {
                const timeAgo = getTimeAgo(new Date(activity.timestamp));
                const activityIcon = getActivityIcon(activity.type);
                const activityColor = getActivityColor(activity.type);
                
                return `
                    <div class="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition duration-200">
                        <div class="w-2 h-2 ${activityColor} rounded-full mt-2 flex-shrink-0"></div>
                        <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between">
                                <p class="text-sm text-gray-700 leading-relaxed">${activityIcon} ${activity.message}</p>
                                <span class="text-xs text-gray-500 ml-2 flex-shrink-0">${timeAgo}</span>
                            </div>
                            ${activity.details && activity.details.voterClass ? `
                                <div class="mt-1">
                                    <span class="inline-flex px-2 py-0.5 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
                                        Kelas ${activity.details.voterClass}
                                    </span>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');
            
            // Add collapse button
            const collapseDiv = document.createElement('div');
            collapseDiv.className = 'text-center pt-3 border-t border-gray-200';
            collapseDiv.innerHTML = `
                <button onclick="updateRecentActivity()" class="text-sm text-gray-600 hover:text-gray-800 font-medium">
                    ‚Üë Tampilkan lebih sedikit
                </button>
            `;
            recentActivityEl.appendChild(collapseDiv);
        }

        // Get last vote time for a candidate
        function getLastVoteTime(candidateId) {
            const voteTimestamps = JSON.parse(localStorage.getItem('voteTimestamps') || '{}');
            let lastVoteTime = null;
            
            // Find the most recent vote for this candidate
            for (const [nis, timestamp] of Object.entries(voteTimestamps)) {
                const voter = validNISList.find(v => v.nis === nis);
                if (voter && voter.hasVoted) {
                    // Check if this voter voted for this candidate by looking at activities
                    const voteActivity = recentActivities.find(activity => 
                        activity.type === 'vote' && 
                        activity.details && 
                        activity.details.nis === nis && 
                        activity.details.candidateId === candidateId
                    );
                    
                    if (voteActivity && (!lastVoteTime || new Date(timestamp) > new Date(lastVoteTime))) {
                        lastVoteTime = timestamp;
                    }
                }
            }
            
            if (!lastVoteTime) return 'Belum ada suara';
            
            const voteDate = new Date(lastVoteTime);
            const now = new Date();
            const diffInMinutes = Math.floor((now - voteDate) / (1000 * 60));
            
            if (diffInMinutes < 1) {
                return 'Baru saja';
            } else if (diffInMinutes < 60) {
                return `${diffInMinutes} menit lalu`;
            } else if (diffInMinutes < 1440) {
                const hours = Math.floor(diffInMinutes / 60);
                return `${hours} jam lalu`;
            } else {
                return voteDate.toLocaleDateString('id-ID', {
                    day: '2-digit',
                    month: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }
        }

        // Update dashboard results
        function updateDashboardResults() {
            const dashboardResultsEl = document.getElementById('dashboardResults');
            const dashboardTotalVotesEl = document.getElementById('dashboardTotalVotes');
            const dashboardParticipationEl = document.getElementById('dashboardParticipation');
            
            if (!dashboardResultsEl) return;
            
            const totalVotes = Object.values(voteResults).reduce((a, b) => a + b, 0);
            const totalVoters = validNISList.length;
            const participationRate = totalVoters > 0 ? ((totalVotes / totalVoters) * 100).toFixed(1) : 0;
            
            // Update summary stats
            if (dashboardTotalVotesEl) dashboardTotalVotesEl.textContent = totalVotes.toLocaleString();
            if (dashboardParticipationEl) dashboardParticipationEl.textContent = participationRate + '%';
            
            const candidateData = [
                { id: '1', name: 'Aulia Putri Anggraeni', class: 'XI-8', color: 'blue', votes: voteResults['1'] || 0 },
                { id: '2', name: 'Muhammad Solehudin', class: 'XI-5', color: 'green', votes: voteResults['2'] || 0 },
                { id: '3', name: 'Natasya Damayanti', class: 'XI-7', color: 'purple', votes: voteResults['3'] || 0 }
            ];
            
            // Sort by votes (descending)
            candidateData.sort((a, b) => b.votes - a.votes);
            
            if (totalVotes === 0) {
                dashboardResultsEl.innerHTML = `
                    <div class="text-center py-8">
                        <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                        </div>
                        <p class="text-gray-500 text-lg font-medium">Belum ada suara masuk</p>
                        <p class="text-gray-400 text-sm mt-1">Hasil akan muncul setelah ada siswa yang memilih</p>
                    </div>
                `;
                return;
            }
            
            dashboardResultsEl.innerHTML = candidateData.map((candidate, index) => {
                const percentage = totalVotes > 0 ? ((candidate.votes / totalVotes) * 100).toFixed(1) : 0;
                const isLeading = index === 0 && candidate.votes > 0;
                
                // Medal and position styling
                let medalIcon, positionClass, borderClass, bgClass;
                if (index === 0) {
                    medalIcon = 'ü•á';
                    positionClass = 'text-yellow-600';
                    borderClass = 'border-yellow-300';
                    bgClass = 'bg-gradient-to-r from-yellow-50 to-orange-50';
                } else if (index === 1) {
                    medalIcon = 'ü•à';
                    positionClass = 'text-gray-600';
                    borderClass = 'border-gray-300';
                    bgClass = 'bg-gradient-to-r from-gray-50 to-slate-50';
                } else {
                    medalIcon = 'ü•â';
                    positionClass = 'text-orange-600';
                    borderClass = 'border-orange-300';
                    bgClass = 'bg-gradient-to-r from-orange-50 to-amber-50';
                }
                
                return `
                    <div class="relative ${bgClass} border-2 ${borderClass} rounded-xl p-6 transition-all duration-300 hover:shadow-lg">
                        ${isLeading ? `
                            <div class="absolute -top-3 -right-3 bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg animate-pulse">
                                üëë MEMIMPIN
                            </div>
                        ` : ''}
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4">
                                <!-- Medal and Position -->
                                <div class="flex flex-col items-center">
                                    <div class="text-4xl mb-1">${medalIcon}</div>
                                    <div class="text-xs font-bold ${positionClass} bg-white px-2 py-1 rounded-full shadow-sm">
                                        POSISI ${index + 1}
                                    </div>
                                </div>
                                
                                <!-- Candidate Photo -->
                                <div class="relative">
                                    <div class="w-16 h-16 rounded-full bg-gradient-to-br from-${candidate.color}-400 to-${candidate.color}-600 flex items-center justify-center text-white text-xl font-bold shadow-lg border-4 border-white">
                                        0${candidate.id}
                                    </div>
                                    ${isLeading ? `
                                        <div class="absolute -top-1 -right-1 w-6 h-6 bg-yellow-400 rounded-full flex items-center justify-center">
                                            <span class="text-xs">üëë</span>
                                        </div>
                                    ` : ''}
                                </div>
                                
                                <!-- Candidate Info -->
                                <div>
                                    <h5 class="text-lg font-bold text-gray-900">${candidate.name}</h5>
                                    <p class="text-${candidate.color}-600 font-medium text-sm">Kelas ${candidate.class}</p>
                                    <div class="flex items-center space-x-2 mt-1">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-${candidate.color}-100 text-${candidate.color}-800">
                                            Kandidat ${candidate.id}
                                        </span>
                                        ${candidate.votes > 0 ? `
                                            <span class="inline-flex px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600">
                                                üìä ${candidate.votes} suara
                                            </span>
                                        ` : ''}
                                    </div>
                                    ${candidate.votes > 0 ? `
                                        <div class="mt-2 text-xs text-gray-500">
                                            üïí Suara terakhir: ${getLastVoteTime(candidate.id)}
                                        </div>
                                    ` : ''}
                                </div>
                            </div>
                            
                            <!-- Vote Count -->
                            <div class="text-right">
                                <div class="text-3xl font-bold ${positionClass} mb-1">${candidate.votes}</div>
                                <div class="text-sm text-gray-600 font-medium">suara</div>
                                <div class="text-lg font-bold text-${candidate.color}-600">${percentage}%</div>
                                ${candidate.votes > 0 ? `
                                    <div class="text-xs text-gray-500 mt-1">
                                        Diperbarui: ${new Date().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' })}
                                    </div>
                                ` : ''}
                            </div>
                        </div>
                        
                        <!-- Progress Bar -->
                        <div class="mt-4">
                            <div class="flex items-center justify-between text-xs text-gray-600 mb-1">
                                <span>Perolehan Suara</span>
                                <span>${percentage}% dari total</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-3 shadow-inner">
                                <div class="bg-gradient-to-r from-${candidate.color}-400 to-${candidate.color}-600 h-3 rounded-full transition-all duration-1000 shadow-sm" 
                                     style="width: ${percentage}%"></div>
                            </div>
                        </div>
                        
                        ${index === 0 && candidate.votes > 0 ? `
                            <div class="mt-3 text-center">
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                    üèÜ Kandidat Terdepan
                                </span>
                            </div>
                        ` : ''}
                    </div>
                `;
            }).join('');
        }

        // Refresh results function
        function refreshResults() {
            updateDashboardResults();
            updateAdminStats();
            updateAdminCharts();
            
            // Show loading animation
            const refreshBtn = event.target;
            const originalText = refreshBtn.innerHTML;
            refreshBtn.innerHTML = '‚è≥ Memuat...';
            refreshBtn.disabled = true;
            
            setTimeout(() => {
                refreshBtn.innerHTML = originalText;
                refreshBtn.disabled = false;
            }, 1000);
        }

        // Update detailed results in reports section
        function updateDetailedResults() {
            const detailedResultsEl = document.getElementById('detailedResults');
            if (!detailedResultsEl) return;
            
            const totalVotes = Object.values(voteResults).reduce((a, b) => a + b, 0);
            const candidateData = [
                { id: '1', name: 'Aulia Putri Anggraeni', class: 'XI-8', color: 'blue', votes: voteResults['1'] || 0 },
                { id: '2', name: 'Muhammad Solehudin', class: 'XI-5', color: 'green', votes: voteResults['2'] || 0 },
                { id: '3', name: 'Natasya Damayanti', class: 'XI-7', color: 'purple', votes: voteResults['3'] || 0 }
            ];
            
            detailedResultsEl.innerHTML = candidateData.map(candidate => {
                const percentage = totalVotes > 0 ? ((candidate.votes / totalVotes) * 100).toFixed(1) : 0;
                return `
                    <div class="flex items-center justify-between p-4 bg-${candidate.color}-50 rounded-lg">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-full bg-gradient-to-br from-${candidate.color}-400 to-${candidate.color}-600 flex items-center justify-center text-white font-bold">
                                0${candidate.id}
                            </div>
                            <div>
                                <p class="font-semibold text-gray-900">${candidate.name}</p>
                                <p class="text-sm text-gray-600">Kelas ${candidate.class}</p>
                            </div>
                        </div>
                        <div class="text-right">
                            <p class="text-2xl font-bold text-${candidate.color}-600">${candidate.votes}</p>
                            <p class="text-sm text-gray-500">${percentage}% suara</p>
                        </div>
                    </div>
                `;
            }).join('');
        }

        // Voters table management
        let currentPage = 1;
        let itemsPerPage = 20;
        let filteredVoters = [];
        let searchQuery = '';

        // Update voters table with pagination and search
        function updateVotersTable() {
            const votersTableEl = document.getElementById('votersTable');
            if (!votersTableEl || !validNISList.length) {
                if (votersTableEl) {
                    votersTableEl.innerHTML = `
                        <tr>
                            <td colspan="5" class="px-6 py-8 text-center text-gray-500">
                                <div class="flex flex-col items-center">
                                    <svg class="w-12 h-12 text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                                    </svg>
                                    <p class="text-lg font-medium">Memuat data pemilih...</p>
                                    <p class="text-sm">Silakan tunggu sebentar</p>
                                </div>
                            </td>
                        </tr>
                    `;
                }
                return;
            }
            
            // Filter voters based on search query
            filteredVoters = validNISList.filter(voter => {
                if (!searchQuery) return true;
                const query = searchQuery.toLowerCase();
                return voter.nis.toLowerCase().includes(query) || 
                       voter.name.toLowerCase().includes(query) ||
                       voter.kelas.toLowerCase().includes(query);
            });
            
            // Calculate pagination
            const totalItems = filteredVoters.length;
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, totalItems);
            const displayVoters = filteredVoters.slice(startIndex, endIndex);
            
            // Generate table rows
            if (displayVoters.length === 0) {
                votersTableEl.innerHTML = `
                    <tr>
                        <td colspan="5" class="px-6 py-8 text-center text-gray-500">
                            <div class="flex flex-col items-center">
                                <svg class="w-12 h-12 text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                                <p class="text-lg font-medium">Tidak ada data ditemukan</p>
                                <p class="text-sm">Coba ubah kata kunci pencarian</p>
                            </div>
                        </td>
                    </tr>
                `;
            } else {
                votersTableEl.innerHTML = displayVoters.map((voter, index) => {
                    const hasVoted = votedNISList.includes(voter.nis);
                    const statusClass = hasVoted ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800';
                    const statusText = hasVoted ? '‚úÖ Sudah Memilih' : '‚è≥ Belum Memilih';
                    const voteTime = hasVoted ? formatVoteTime(voter.voteTime) : '-';
                    const rowNumber = startIndex + index + 1;
                    
                    return `
                        <tr class="hover:bg-gray-50 transition duration-150">
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${voter.nis}</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-gradient-to-br from-blue-400 to-purple-600 rounded-full flex items-center justify-center text-white text-xs font-bold mr-3">
                                        ${rowNumber}
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">${voter.name}</div>
                                        <div class="text-xs text-gray-500">NIS: ${voter.nis}</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800">
                                    ${voter.kelas}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex px-3 py-1 text-xs font-semibold rounded-full ${statusClass}">
                                    ${statusText}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${voteTime}</td>
                        </tr>
                    `;
                }).join('');
            }
            
            // Update pagination info
            updatePaginationInfo(startIndex + 1, endIndex, totalItems, totalPages);
        }

        // Format real vote time
        function formatVoteTime(timestamp) {
            if (!timestamp) return '-';
            
            const voteDate = new Date(timestamp);
            const now = new Date();
            const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
            const voteDay = new Date(voteDate.getFullYear(), voteDate.getMonth(), voteDate.getDate());
            
            const timeString = voteDate.toLocaleTimeString('id-ID', { 
                hour: '2-digit', 
                minute: '2-digit',
                second: '2-digit'
            });
            
            if (voteDay.getTime() === today.getTime()) {
                // Today - show time only
                return `${timeString} WIB`;
            } else {
                // Other day - show date and time
                const dateString = voteDate.toLocaleDateString('id-ID', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
                return `${dateString} ${timeString} WIB`;
            }
        }

        // Update pagination information
        function updatePaginationInfo(start, end, total, totalPages) {
            const paginationInfo = document.querySelector('.pagination-info');
            const paginationControls = document.querySelector('.pagination-controls');
            
            if (paginationInfo) {
                paginationInfo.innerHTML = `
                    Menampilkan <span class="font-medium">${start}</span> sampai <span class="font-medium">${end}</span> 
                    dari <span class="font-medium">${total}</span> pemilih
                    ${searchQuery ? `(difilter dari ${validNISList.length} total)` : ''}
                `;
            }
            
            if (paginationControls) {
                let paginationHTML = '';
                
                // Previous button
                paginationHTML += `
                    <button onclick="changePage(${currentPage - 1})" 
                            class="px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 transition duration-150 ${currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}" 
                            ${currentPage === 1 ? 'disabled' : ''}>
                        Sebelumnya
                    </button>
                `;
                
                // Page numbers
                const maxVisiblePages = 5;
                let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
                let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                
                if (endPage - startPage + 1 < maxVisiblePages) {
                    startPage = Math.max(1, endPage - maxVisiblePages + 1);
                }
                
                for (let i = startPage; i <= endPage; i++) {
                    paginationHTML += `
                        <button onclick="changePage(${i})" 
                                class="px-3 py-1 rounded text-sm transition duration-150 ${i === currentPage ? 'bg-blue-600 text-white' : 'border border-gray-300 hover:bg-gray-50'}">
                            ${i}
                        </button>
                    `;
                }
                
                // Next button
                paginationHTML += `
                    <button onclick="changePage(${currentPage + 1})" 
                            class="px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 transition duration-150 ${currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}" 
                            ${currentPage === totalPages ? 'disabled' : ''}>
                        Selanjutnya
                    </button>
                `;
                
                paginationControls.innerHTML = paginationHTML;
            }
        }

        // Change page function
        function changePage(page) {
            const totalPages = Math.ceil(filteredVoters.length / itemsPerPage);
            if (page >= 1 && page <= totalPages) {
                currentPage = page;
                updateVotersTable();
            }
        }

        // Search functionality
        function searchVoters(query) {
            searchQuery = query;
            currentPage = 1; // Reset to first page when searching
            updateVotersTable();
        }

        // Initialize charts
        function initializeCharts() {
            // Vote results chart
            const voteCtx = document.getElementById('voteChart').getContext('2d');
            window.voteChart = new Chart(voteCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Aulia Putri', 'Muhammad Solehudin', 'Natasya Damayanti'],
                    datasets: [{
                        data: [
                            voteResults['1'] || 0,
                            voteResults['2'] || 0,
                            voteResults['3'] || 0
                        ],
                        backgroundColor: [
                            '#3B82F6',
                            '#10B981',
                            '#8B5CF6'
                        ],
                        borderWidth: 2,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    }
                }
            });

            // Class participation chart
            const classCtx = document.getElementById('classChart').getContext('2d');
            const classParticipationData = calculateClassParticipation();
            
            window.classChart = new Chart(classCtx, {
                type: 'bar',
                data: {
                    labels: classParticipationData.labels,
                    datasets: [{
                        label: 'Partisipasi (%)',
                        data: classParticipationData.data,
                        backgroundColor: '#3B82F6',
                        borderColor: '#1D4ED8',
                        borderWidth: 1,
                        borderRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: {
                                callback: function(value) {
                                    return value + '%';
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', function(e) {
            const sidebar = document.getElementById('sidebar');
            const openBtn = document.getElementById('openSidebar');
            
            if (window.innerWidth < 768 && 
                !sidebar.contains(e.target) && 
                !openBtn.contains(e.target) && 
                !sidebar.classList.contains('sidebar-hidden')) {
                sidebar.classList.add('sidebar-hidden');
            }
        });

        // Handle window resize
        window.addEventListener('resize', function() {
            if (window.innerWidth >= 768) {
                document.getElementById('sidebar').classList.remove('sidebar-hidden');
            }
        });

        // Search and pagination event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Search input event listener
            const searchInput = document.getElementById('voterSearchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function(e) {
                    searchVoters(e.target.value);
                });
            }

            // Clear search button
            const clearSearchBtn = document.getElementById('clearSearchBtn');
            if (clearSearchBtn) {
                clearSearchBtn.addEventListener('click', function() {
                    const searchInput = document.getElementById('voterSearchInput');
                    if (searchInput) {
                        searchInput.value = '';
                        searchVoters('');
                    }
                });
            }

            // Items per page selector
            const itemsPerPageSelect = document.getElementById('itemsPerPageSelect');
            if (itemsPerPageSelect) {
                itemsPerPageSelect.addEventListener('change', function(e) {
                    itemsPerPage = parseInt(e.target.value);
                    currentPage = 1; // Reset to first page
                    updateVotersTable();
                });
            }
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'98b46b8ee21ece06',t:'MTc1OTkxMzczNS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
